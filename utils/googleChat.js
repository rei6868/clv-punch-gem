const axios = require('axios');
require('dotenv').config();

const { GOOGLE_CHAT_WEBHOOK_URL } = process.env;

/**
 * G·ª≠i th√¥ng b√°o ƒë·∫øn Google Chat Space
 * @param {boolean} isSuccess - Tr·∫°ng th√°i check-in (th√†nh c√¥ng/th·∫•t b·∫°i)
 * @param {string} imageUrl - URL ·∫£nh ch·ª•p m√†n h√¨nh t·ª´ Cloudinary
 * @param {string} errorMessage - Tin nh·∫Øn l·ªói (n·∫øu c√≥)
 * @param {string} recordedPunchTime - Th·ªùi gian ƒë·ªçc t·ª´ UI (v√≠ d·ª•: "06:31")
 */
async function sendGoogleChatNotification(isSuccess, imageUrl, errorMessage = '', recordedPunchTime = '') {
  if (!GOOGLE_CHAT_WEBHOOK_URL) {
    console.warn('Google Chat Webhook URL is not defined. Skipping notification.');
    return;
  }

  const now = new Date();
  const timeVN = now.toLocaleTimeString('vi-VN', { timeZone: 'Asia/Ho_Chi_Minh', hour12: false });
  const dateVN = now.toLocaleDateString('vi-VN', { timeZone: 'Asia/Ho_Chi_Minh' });

  // X√°c ƒë·ªãnh title v√† emoji d·ª±a tr√™n gi·ªù
  const currentHourVN = parseInt(
    now.toLocaleTimeString('en-US', { hour: '2-digit', hour12: false, timeZone: 'Asia/Ho_Chi_Minh' })
  );
  const punchType = currentHourVN < 13 ? 'Punch In' : 'Punch Out';
  const punchEmoji = currentHourVN < 13 ? '‚òÄÔ∏è' : 'üåô';

  // T√πy ch·ªânh Title v√† Subtitle
  const successTitle = recordedPunchTime
    ? `${punchEmoji} ${punchType} Th√†nh C√¥ng (l√∫c ${recordedPunchTime})`
    : `${punchEmoji} ${punchType} Th√†nh C√¥ng`;

  const timeSubtitle = recordedPunchTime
    ? `(Gi·ªù h·ªá th·ªëng: ${timeVN} - ${dateVN})`
    : `V√†o l√∫c ${timeVN} - ${dateVN}`;

  // (S·ª¨A L·ªñI ·∫¢NH) D√πng link icon ·ªïn ƒë·ªãnh
  const successIcon =
    'https://raw.githubusercontent.com/google-gemini/cookbook/main/Ecosystems/GCP/Google-Chat-Vertex-AI/assets/check_circle.png';
  const failureIcon =
    'https://raw.githubusercontent.com/google-gemini/cookbook/main/Ecosystems/GCP/Google-Chat-Vertex-AI/assets/warning.png';
  const placeholderImage =
    'https://raw.githubusercontent.com/google-gemini/cookbook/main/Ecosystems/GCP/Google-Chat-Vertex-AI/assets/screenshot-placeholder.png';

  // (S·ª¨A L·ªñI "Sent attachment") Th√™m text t√≥m t·∫Øt
  const summaryText = isSuccess ? successTitle : `üö® ${punchType} Th·∫•t B·∫°i`;

  const successSections = [];
  if (imageUrl) {
    successSections.push({
      widgets: [
        {
          image: { imageUrl }
        }
      ]
    });
  }

  const successCard = {
    text: summaryText,
    cardsV2: [
      {
        cardId: 'punch-card',
        card: {
          header: {
            title: successTitle,
            subtitle: timeSubtitle,
            imageUrl: successIcon,
            imageType: 'CIRCLE'
          },
          sections: successSections
        }
      }
    ]
  };

  const failureWidgets = [
    {
      textParagraph: {
        text: `<b>L·ªói:</b> ${errorMessage}`
      }
    }
  ];

  if (imageUrl) {
    const resolvedImageUrl = imageUrl.includes('K6b4F0L') ? placeholderImage : imageUrl;
    failureWidgets.push({
      image: { imageUrl: resolvedImageUrl }
    });
  }

  const failureCard = {
    text: summaryText,
    cardsV2: [
      {
        cardId: 'punch-card-error',
        card: {
          header: {
            title: `üö® ${punchType} Th·∫•t B·∫°i`,
            subtitle: `V√†o l√∫c ${timeVN} - ${dateVN}`,
            imageUrl: failureIcon,
            imageType: 'CIRCLE'
          },
          sections: [
            {
              widgets: failureWidgets
            }
          ]
        }
      }
    ]
  };

  const payload = isSuccess ? successCard : failureCard;

  try {
    await axios.post(GOOGLE_CHAT_WEBHOOK_URL, payload, {
      headers: { 'Content-Type': 'application/json' }
    });
    console.log('Google Chat notification sent successfully.');
  } catch (error) {
    console.error('Failed to send Google Chat notification:', error.message);
  }
}

module.exports = { sendGoogleChatNotification };
