# File: .github/workflows/wfh-punch.yml
name: Cyberlogitec Auto Punch (WFH)

on:
  workflow_dispatch:
  schedule:
    # (Gi·ªù UTC = Gi·ªù VN - 7)
    # Ch·∫°y l√∫c 06:00 S√°ng VN (T3, T4)
    - cron: '0 23 * * 1,2' # 23:00 UTC (T2, T3)
    # Ch·∫°y l√∫c 18:00 Chi·ªÅu VN (T3, T4)
    - cron: '0 11 * * 2,3' # 11:00 UTC (T3, T4)

jobs:
  punch-in-out:
    name: Run Punch In/Out Script
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    # (Kh√¥ng c·∫ßn output ·ªü level job n·ªØa)

    steps:
      - name: 1. Check out repository
        uses: actions/checkout@v4

      - name: 3. Set up Node.js v20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 4. Install dependencies
        id: install_deps
        run: npm install

      - name: 5. Install Playwright browsers and dependencies
        id: install_playwright
        run: npx playwright install --with-deps chromium

      - name: 6. Run Playwright test
        id: run_playwright_test
        # --- S·ª¨A: Th√™m id v√† outputs ---
        outputs:
          image_url: ${{ steps.playwright_result.outputs.image_url || '' }}
          punch_time: ${{ steps.playwright_result.outputs.punch_time || '' }}
          error_message: ${{ steps.playwright_result.outputs.error_message || '' }}
          outcome: ${{ steps.playwright_result.outcome }}
        run: |
          # B·ªçc script test trong m·ªôt b∆∞·ªõc ri√™ng (playwright_result)
          # Ghi GITHUB_OUTPUT v√†o m·ªôt file
          echo "Running playwright test..."
          npx playwright test tests/cyberlogitec.spec.js || true
          echo "Playwright test finished."
        
      - name: 7. Report Status to Vercel API
        # Lu√¥n ch·∫°y, k·ªÉ c·∫£ khi b∆∞·ªõc 6 th·∫•t b·∫°i
        if: always()
        # --- S·ª¨A: ƒê·ªçc output v√† `curl -v` ---
        run: |
          # 1. X√°c ƒë·ªãnh Status
          STATUS="fail"
          if [ "${{ steps.run_playwright_test.outputs.outcome }}" == "success" ]; then
            STATUS="success"
          fi
          
          # 2. ƒê·ªçc c√°c output t·ª´ Playwright
          IMAGE_URL="${{ steps.run_playwright_test.outputs.image_url }}"
          PUNCH_TIME="${{ steps.run_playwright_test.outputs.punch_time }}"
          ERROR_MSG="${{ steps.run_playwright_test.outputs.error_message }}"

          # 3. L·∫•y period (am/pm) t·ª´ gi·ªù UTC c·ªßa GHA
          PERIOD="am" 
          HOUR_UTC=$(date -u +'%H')
          if [ "$HOUR_UTC" -gt "10" ] && [ "$HOUR_UTC" -lt "22" ]; then
             PERIOD="pm"
          fi

          # 4. X√¢y d·ª±ng JSON Payload
          # (D√πng jq ƒë·ªÉ x√¢y d·ª±ng JSON an to√†n, tr√°nh l·ªói k√Ω t·ª± ƒë·∫∑c bi·ªát)
          sudo apt-get install -y jq
          
          PAYLOAD=$(jq -n \
            --arg status "$STATUS" \
            --arg period "$PERIOD" \
            --arg message "$ERROR_MSG" \
            --arg imageUrl "$IMAGE_URL" \
            --arg recordedPunchTime "$PUNCH_TIME" \
            '{status: $status, period: $period, message: $message, imageUrl: $imageUrl, recordedPunchTime: $recordedPunchTime}')

          echo "Sending payload:"
          echo "$PAYLOAD"

          # 5. G·ª≠i JSON payload (Th√™m -v, b·ªè --fail ƒë·ªÉ xem chi ti·∫øt)
          curl -v -X POST 'https://auto-punch.vercel.app/api/state/report' \
            -H 'Authorization: Bearer ${{ secrets.PUNCH_SECRET }}' \
            -H 'Content-Type: application/json' \
            -d "$PAYLOAD"
            
      - name: 8. Notify on Workflow Setup Failure
        # (Gi·ªØ nguy√™n)
        if: failure() && (steps.install_deps.outcome == 'failure' || steps.install_playwright.outcome == 'failure')
        run: |
          curl -X POST -H 'Content-Type: application/json' \
          '${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}' \
          -d '{ "text": "üö® **Workflow `Auto Punch (WFH)` ƒë√£ th·∫•t b·∫°i.**\nL·ªói x·∫£y ra ·ªü b∆∞·ªõc setup (v√≠ d·ª•: install dependencies), kh√¥ng ph·∫£i l·ªói do script test.\nC·∫ßn ki·ªÉm tra ngay t·∫°i tab Actions c·ªßa GitHub." }'